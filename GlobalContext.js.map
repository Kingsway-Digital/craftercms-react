{"version":3,"sources":["src/GlobalContext.js"],"names":["GlobalContext","useGlobalContext","context","Error","GlobalContextProvider","props","useSpreadState","debug","process","env","REACT_APP_DEBUG","user","state","setState","value","initializerArg","initializer","reducer","nextState"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,gBAAG,0BAAc,IAAd,CAAtB;;AAEO,SAASC,gBAAT,GAA4B;AAC/B,MAAMC,OAAO,GAAG,uBAAWF,aAAX,CAAhB;;AACA,MAAI,CAACE,OAAL,EAAc;AACV,UAAM,IAAIC,KAAJ,gEAAN;AACH;;AACD,SAAOD,OAAP;AACH,C,CAED;;;AACO,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;AAEzC,wBAA0BC,cAAc,CAAC;AACrCC,IAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,eAAZ,KAAgC,MADF;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAD,CAAxC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAKA,MAAMC,KAAK,GAAG,oBAAQ;AAAA,WAAM,CAACF,KAAD,EAAQC,QAAR,CAAN;AAAA,GAAR,EAAiC,CAACD,KAAD,EAAQC,QAAR,CAAjC,CAAd;AACA,sBAAO,gCAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC;AAA/B,KAA0CT,KAA1C,EAAP;AACH;;AAED,SAASC,cAAT,CAAwBS,cAAxB,EAAwCC,WAAxC,EAAqD;AACjD,SAAO,uBAAWC,OAAX,EAAoBF,cAApB,EAAoCC,WAApC,CAAP;AACH;;AAED,SAASC,OAAT,CAAiBL,KAAjB,EAAwBM,SAAxB,EAAmC;AAC/B,yCAAWN,KAAX,GAAqBM,SAArB;AACH","sourcesContent":["import React, {createContext, useContext, useMemo, useReducer} from 'react';\n\nconst GlobalContext = createContext(null);\n\nexport function useGlobalContext() {\n    const context = useContext(GlobalContext);\n    if (!context) {\n        throw new Error(`useGlobalContext() must be used within GlobalContextProvider`);\n    }\n    return context;\n}\n\n// usage: const [{debug}, update] = useGlobalContext();\nexport function GlobalContextProvider(props) {\n\n    const [state, setState] = useSpreadState({\n        debug: process.env.REACT_APP_DEBUG === \"true\",\n        user: null\n    });\n\n    const value = useMemo(() => [state, setState], [state, setState]);\n    return <GlobalContext.Provider value={value} {...props} />;\n}\n\nfunction useSpreadState(initializerArg, initializer) {\n    return useReducer(reducer, initializerArg, initializer);\n}\n\nfunction reducer(state, nextState) {\n    return {...state, ...nextState};\n}"],"file":"GlobalContext.js"}